services:
  cache:
    image: redis:7.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - cache:/data
  app:
    depends_on:
      postgres:
        condition: service_healthy
    image: local-logto:latest
    entrypoint:
      [
        "sh",
        "-c",
        "npm run cli db seed -- --swe && npm run cli db alteration deploy latest && npm run cli db ogcio -- --seeder-filepath=\"/etc/logto/packages/cli/src/commands/database/ogcio/ogcio-seeder.json\" && npm start"
      ]
    ports:
      - 3301:3301
      - 3302:3302
    environment:
      - TRUST_PROXY_HEADER=1
      - DB_URL=postgres://postgres:p0stgr3s@postgres:5433/logto
      # Mandatory for GitPod to map host env to the container, thus GitPod can dynamically configure the public URL of Logto;
      # Or, you can leverage it for local testing.
      - ENDPOINT
      - ADMIN_ENDPOINT
      - PORT=3301
      - ADMIN_PORT=3302
      - REDIS_URL=redis://:eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81@cache
  postgres:
    image: postgres:14-alpine
    user: postgres
    volumes:
      - db:/var/lib/postgresql/data

    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: p0stgr3s
      PGPORT: 5433
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5433:5433

volumes:
  db:
    driver: local
  cache:
    driver: local
